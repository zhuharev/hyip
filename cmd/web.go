package cmd

import (
	"log"
	"path/filepath"

	"github.com/zhuharev/hyip/pkg/bootstrap"
	"github.com/zhuharev/hyip/web/context"

	"github.com/go-macaron/i18n"
	"github.com/go-macaron/session"
	"github.com/urfave/cli"
	macaron "gopkg.in/macaron.v1"
)

var (
	// CmdWeb starts web server
	CmdWeb = cli.Command{
		Name:   "web",
		Action: runWeb,
		Flags: []cli.Flag{
			cli.BoolFlag{
				Name: "bot",
			},
			cli.BoolFlag{
				Name: "dev",
			},
		},
	}
)

func newMacaron() *macaron.Macaron {
	m := macaron.Classic()
	m.Use(macaron.Renderer(macaron.RenderOptions{
		Layout: "layout",
	}))

	// sessions, auth, cookies
	sessionLifeTime := 24 * 60 * 60 * 365
	m.Use(session.Sessioner(session.Options{
		CookieName:     "s",
		CookieLifeTime: sessionLifeTime,
		Maxlifetime:    int64(sessionLifeTime),
		Provider:       "file",
		ProviderConfig: filepath.Join("data", "sessions"),
	}))

	m.Use(i18n.I18n(i18n.Options{
		Langs:     []string{"en-US", "ru-RU"},
		Names:     []string{"English", "Русский"},
		Directory: "conf/locals",
	}))

	m.Use(context.Contexter())

	// autogenerated
	registreRoutes(m)
	return m
}

func runWeb(ctx *cli.Context) {

	err := bootstrap.GlobalInit(ctx.Bool("dev"))
	if err != nil {
		log.Fatalln(err)
	}

	if ctx.Bool("bot") {
		go RunBot(ctx)
	}
	m := newMacaron()

	m.Run()
}
