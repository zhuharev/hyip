package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set ProfitQuerySet

// ProfitQuerySet is an queryset type for Profit
type ProfitQuerySet struct {
	db *gorm.DB
}

// NewProfitQuerySet constructs new ProfitQuerySet
func NewProfitQuerySet(db *gorm.DB) ProfitQuerySet {
	return ProfitQuerySet{
		db: db.Model(&Profit{}),
	}
}

func (qs ProfitQuerySet) w(db *gorm.DB) ProfitQuerySet {
	return NewProfitQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) All(ret *[]Profit) error {
	return qs.db.Find(ret).Error
}

// AmountEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountEq(amount uint) ProfitQuerySet {
	return qs.w(qs.db.Where("amount = ?", amount))
}

// AmountGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountGt(amount uint) ProfitQuerySet {
	return qs.w(qs.db.Where("amount > ?", amount))
}

// AmountGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountGte(amount uint) ProfitQuerySet {
	return qs.w(qs.db.Where("amount >= ?", amount))
}

// AmountIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountIn(amount uint, amountRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{amount}
	for _, arg := range amountRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("amount IN (?)", iArgs))
}

// AmountLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountLt(amount uint) ProfitQuerySet {
	return qs.w(qs.db.Where("amount < ?", amount))
}

// AmountLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountLte(amount uint) ProfitQuerySet {
	return qs.w(qs.db.Where("amount <= ?", amount))
}

// AmountNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountNe(amount uint) ProfitQuerySet {
	return qs.w(qs.db.Where("amount != ?", amount))
}

// AmountNotIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) AmountNotIn(amount uint, amountRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{amount}
	for _, arg := range amountRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("amount NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Profit) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CreatedAtEq(createdAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CreatedAtGt(createdAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CreatedAtGte(createdAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CreatedAtLt(createdAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CreatedAtLte(createdAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CreatedAtNe(createdAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CurrencyEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyEq(currency uint) ProfitQuerySet {
	return qs.w(qs.db.Where("currency = ?", currency))
}

// CurrencyGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyGt(currency uint) ProfitQuerySet {
	return qs.w(qs.db.Where("currency > ?", currency))
}

// CurrencyGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyGte(currency uint) ProfitQuerySet {
	return qs.w(qs.db.Where("currency >= ?", currency))
}

// CurrencyIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyIn(currency uint, currencyRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{currency}
	for _, arg := range currencyRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("currency IN (?)", iArgs))
}

// CurrencyLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyLt(currency uint) ProfitQuerySet {
	return qs.w(qs.db.Where("currency < ?", currency))
}

// CurrencyLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyLte(currency uint) ProfitQuerySet {
	return qs.w(qs.db.Where("currency <= ?", currency))
}

// CurrencyNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyNe(currency uint) ProfitQuerySet {
	return qs.w(qs.db.Where("currency != ?", currency))
}

// CurrencyNotIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) CurrencyNotIn(currency uint, currencyRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{currency}
	for _, arg := range currencyRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("currency NOT IN (?)", iArgs))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Profit) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) Delete() error {
	return qs.db.Delete(Profit{}).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtEq(deletedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtGt(deletedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtGte(deletedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtIsNotNull() ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtIsNull() ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtLt(deletedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtLte(deletedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) DeletedAtNe(deletedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) GetUpdater() ProfitUpdater {
	return NewProfitUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDEq(ID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDGt(ID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDGte(ID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDIn(ID uint, IDRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDLt(ID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDLte(ID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDNe(ID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) IDNotIn(ID uint, IDRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) Limit(limit int) ProfitQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// ObjectIDEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDEq(objectID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("object_id = ?", objectID))
}

// ObjectIDGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDGt(objectID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("object_id > ?", objectID))
}

// ObjectIDGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDGte(objectID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("object_id >= ?", objectID))
}

// ObjectIDIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDIn(objectID uint, objectIDRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{objectID}
	for _, arg := range objectIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("object_id IN (?)", iArgs))
}

// ObjectIDLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDLt(objectID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("object_id < ?", objectID))
}

// ObjectIDLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDLte(objectID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("object_id <= ?", objectID))
}

// ObjectIDNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDNe(objectID uint) ProfitQuerySet {
	return qs.w(qs.db.Where("object_id != ?", objectID))
}

// ObjectIDNotIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ObjectIDNotIn(objectID uint, objectIDRest ...uint) ProfitQuerySet {
	iArgs := []interface{}{objectID}
	for _, arg := range objectIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("object_id NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs ProfitQuerySet) One(ret *Profit) error {
	return qs.db.First(ret).Error
}

// OrderAscByAmount is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByAmount() ProfitQuerySet {
	return qs.w(qs.db.Order("amount ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByCreatedAt() ProfitQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByCurrency is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByCurrency() ProfitQuerySet {
	return qs.w(qs.db.Order("currency ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByDeletedAt() ProfitQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByID() ProfitQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByObjectID is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByObjectID() ProfitQuerySet {
	return qs.w(qs.db.Order("object_id ASC"))
}

// OrderAscByProfitType is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByProfitType() ProfitQuerySet {
	return qs.w(qs.db.Order("profit_type ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderAscByUpdatedAt() ProfitQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByAmount is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByAmount() ProfitQuerySet {
	return qs.w(qs.db.Order("amount DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByCreatedAt() ProfitQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByCurrency is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByCurrency() ProfitQuerySet {
	return qs.w(qs.db.Order("currency DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByDeletedAt() ProfitQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByID() ProfitQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByObjectID is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByObjectID() ProfitQuerySet {
	return qs.w(qs.db.Order("object_id DESC"))
}

// OrderDescByProfitType is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByProfitType() ProfitQuerySet {
	return qs.w(qs.db.Order("profit_type DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) OrderDescByUpdatedAt() ProfitQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// ProfitTypeEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeEq(profitType ProfitType) ProfitQuerySet {
	return qs.w(qs.db.Where("profit_type = ?", profitType))
}

// ProfitTypeGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeGt(profitType ProfitType) ProfitQuerySet {
	return qs.w(qs.db.Where("profit_type > ?", profitType))
}

// ProfitTypeGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeGte(profitType ProfitType) ProfitQuerySet {
	return qs.w(qs.db.Where("profit_type >= ?", profitType))
}

// ProfitTypeIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeIn(profitType ProfitType, profitTypeRest ...ProfitType) ProfitQuerySet {
	iArgs := []interface{}{profitType}
	for _, arg := range profitTypeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("profit_type IN (?)", iArgs))
}

// ProfitTypeLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeLt(profitType ProfitType) ProfitQuerySet {
	return qs.w(qs.db.Where("profit_type < ?", profitType))
}

// ProfitTypeLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeLte(profitType ProfitType) ProfitQuerySet {
	return qs.w(qs.db.Where("profit_type <= ?", profitType))
}

// ProfitTypeNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeNe(profitType ProfitType) ProfitQuerySet {
	return qs.w(qs.db.Where("profit_type != ?", profitType))
}

// ProfitTypeNotIn is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) ProfitTypeNotIn(profitType ProfitType, profitTypeRest ...ProfitType) ProfitQuerySet {
	iArgs := []interface{}{profitType}
	for _, arg := range profitTypeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("profit_type NOT IN (?)", iArgs))
}

// SetAmount is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetAmount(amount uint) ProfitUpdater {
	u.fields[string(ProfitDBSchema.Amount)] = amount
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetCreatedAt(createdAt time.Time) ProfitUpdater {
	u.fields[string(ProfitDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCurrency is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetCurrency(currency uint) ProfitUpdater {
	u.fields[string(ProfitDBSchema.Currency)] = currency
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetDeletedAt(deletedAt *time.Time) ProfitUpdater {
	u.fields[string(ProfitDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetID(ID uint) ProfitUpdater {
	u.fields[string(ProfitDBSchema.ID)] = ID
	return u
}

// SetObjectID is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetObjectID(objectID uint) ProfitUpdater {
	u.fields[string(ProfitDBSchema.ObjectID)] = objectID
	return u
}

// SetProfitType is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetProfitType(profitType ProfitType) ProfitUpdater {
	u.fields[string(ProfitDBSchema.ProfitType)] = profitType
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) SetUpdatedAt(updatedAt time.Time) ProfitUpdater {
	u.fields[string(ProfitDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u ProfitUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) UpdatedAtEq(updatedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) UpdatedAtGt(updatedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) UpdatedAtGte(updatedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) UpdatedAtLt(updatedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) UpdatedAtLte(updatedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ProfitQuerySet) UpdatedAtNe(updatedAt time.Time) ProfitQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set ProfitQuerySet

// ===== BEGIN of Profit modifiers

type profitDBSchemaField string

func (f profitDBSchemaField) String() string {
	return string(f)
}

// ProfitDBSchema stores db field names of Profit
var ProfitDBSchema = struct {
	ID         profitDBSchemaField
	CreatedAt  profitDBSchemaField
	UpdatedAt  profitDBSchemaField
	DeletedAt  profitDBSchemaField
	ProfitType profitDBSchemaField
	ObjectID   profitDBSchemaField
	Amount     profitDBSchemaField
	Currency   profitDBSchemaField
}{

	ID:         profitDBSchemaField("id"),
	CreatedAt:  profitDBSchemaField("created_at"),
	UpdatedAt:  profitDBSchemaField("updated_at"),
	DeletedAt:  profitDBSchemaField("deleted_at"),
	ProfitType: profitDBSchemaField("profit_type"),
	ObjectID:   profitDBSchemaField("object_id"),
	Amount:     profitDBSchemaField("amount"),
	Currency:   profitDBSchemaField("currency"),
}

// Update updates Profit fields by primary key
func (o *Profit) Update(db *gorm.DB, fields ...profitDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":          o.ID,
		"created_at":  o.CreatedAt,
		"updated_at":  o.UpdatedAt,
		"deleted_at":  o.DeletedAt,
		"profit_type": o.ProfitType,
		"object_id":   o.ObjectID,
		"amount":      o.Amount,
		"currency":    o.Currency,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Profit %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ProfitUpdater is an Profit updates manager
type ProfitUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewProfitUpdater creates new Profit updater
func NewProfitUpdater(db *gorm.DB) ProfitUpdater {
	return ProfitUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Profit{}),
	}
}

// ===== END of Profit modifiers

// ===== END of all query sets
