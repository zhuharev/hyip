package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set PaymentSystemQuerySet

// PaymentSystemQuerySet is an queryset type for PaymentSystem
type PaymentSystemQuerySet struct {
	db *gorm.DB
}

// NewPaymentSystemQuerySet constructs new PaymentSystemQuerySet
func NewPaymentSystemQuerySet(db *gorm.DB) PaymentSystemQuerySet {
	return PaymentSystemQuerySet{
		db: db.Model(&PaymentSystem{}),
	}
}

func (qs PaymentSystemQuerySet) w(db *gorm.DB) PaymentSystemQuerySet {
	return NewPaymentSystemQuerySet(db)
}

// AccountIDEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) AccountIDEq(accountID string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("account_id = ?", accountID))
}

// AccountIDIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) AccountIDIn(accountID string, accountIDRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{accountID}
	for _, arg := range accountIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("account_id IN (?)", iArgs))
}

// AccountIDNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) AccountIDNe(accountID string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("account_id != ?", accountID))
}

// AccountIDNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) AccountIDNotIn(accountID string, accountIDRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{accountID}
	for _, arg := range accountIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("account_id NOT IN (?)", iArgs))
}

// All is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) All(ret *[]PaymentSystem) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *PaymentSystem) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CreatedAtEq(createdAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CreatedAtGt(createdAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CreatedAtGte(createdAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CreatedAtLt(createdAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CreatedAtLte(createdAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CreatedAtNe(createdAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CurrenciesEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CurrenciesEq(currencies string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("currencies = ?", currencies))
}

// CurrenciesIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CurrenciesIn(currencies string, currenciesRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{currencies}
	for _, arg := range currenciesRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("currencies IN (?)", iArgs))
}

// CurrenciesNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CurrenciesNe(currencies string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("currencies != ?", currencies))
}

// CurrenciesNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) CurrenciesNotIn(currencies string, currenciesRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{currencies}
	for _, arg := range currenciesRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("currencies NOT IN (?)", iArgs))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *PaymentSystem) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) Delete() error {
	return qs.db.Delete(PaymentSystem{}).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtEq(deletedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtGt(deletedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtGte(deletedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtIsNotNull() PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtIsNull() PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtLt(deletedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtLte(deletedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DeletedAtNe(deletedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// DirectionEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DirectionEq(direction PaymentDirection) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("direction = ?", direction))
}

// DirectionIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DirectionIn(direction PaymentDirection, directionRest ...PaymentDirection) PaymentSystemQuerySet {
	iArgs := []interface{}{direction}
	for _, arg := range directionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("direction IN (?)", iArgs))
}

// DirectionNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DirectionNe(direction PaymentDirection) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("direction != ?", direction))
}

// DirectionNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) DirectionNotIn(direction PaymentDirection, directionRest ...PaymentDirection) PaymentSystemQuerySet {
	iArgs := []interface{}{direction}
	for _, arg := range directionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("direction NOT IN (?)", iArgs))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) GetUpdater() PaymentSystemUpdater {
	return NewPaymentSystemUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDEq(ID uint) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDGt(ID uint) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDGte(ID uint) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDIn(ID uint, IDRest ...uint) PaymentSystemQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDLt(ID uint) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDLte(ID uint) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDNe(ID uint) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) IDNotIn(ID uint, IDRest ...uint) PaymentSystemQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// KeyEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) KeyEq(key string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("key = ?", key))
}

// KeyIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) KeyIn(key string, keyRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{key}
	for _, arg := range keyRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("key IN (?)", iArgs))
}

// KeyNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) KeyNe(key string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("key != ?", key))
}

// KeyNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) KeyNotIn(key string, keyRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{key}
	for _, arg := range keyRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("key NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) Limit(limit int) PaymentSystemQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) NameEq(name string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) NameIn(name string, nameRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) NameNe(name string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) NameNotIn(name string, nameRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs PaymentSystemQuerySet) One(ret *PaymentSystem) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderAscByCreatedAt() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderAscByDeletedAt() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderAscByID() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderAscByUpdatedAt() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderDescByCreatedAt() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderDescByDeletedAt() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderDescByID() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) OrderDescByUpdatedAt() PaymentSystemQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PSTypeEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PSTypeEq(pSType PaymentSystemType) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("ps_type = ?", pSType))
}

// PSTypeIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PSTypeIn(pSType PaymentSystemType, pSTypeRest ...PaymentSystemType) PaymentSystemQuerySet {
	iArgs := []interface{}{pSType}
	for _, arg := range pSTypeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("ps_type IN (?)", iArgs))
}

// PSTypeNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PSTypeNe(pSType PaymentSystemType) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("ps_type != ?", pSType))
}

// PSTypeNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PSTypeNotIn(pSType PaymentSystemType, pSTypeRest ...PaymentSystemType) PaymentSystemQuerySet {
	iArgs := []interface{}{pSType}
	for _, arg := range pSTypeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("ps_type NOT IN (?)", iArgs))
}

// PaymentDirectionEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PaymentDirectionEq(paymentDirection PaymentDirection) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("payment_direction = ?", paymentDirection))
}

// PaymentDirectionIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PaymentDirectionIn(paymentDirection PaymentDirection, paymentDirectionRest ...PaymentDirection) PaymentSystemQuerySet {
	iArgs := []interface{}{paymentDirection}
	for _, arg := range paymentDirectionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("payment_direction IN (?)", iArgs))
}

// PaymentDirectionNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PaymentDirectionNe(paymentDirection PaymentDirection) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("payment_direction != ?", paymentDirection))
}

// PaymentDirectionNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) PaymentDirectionNotIn(paymentDirection PaymentDirection, paymentDirectionRest ...PaymentDirection) PaymentSystemQuerySet {
	iArgs := []interface{}{paymentDirection}
	for _, arg := range paymentDirectionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("payment_direction NOT IN (?)", iArgs))
}

// SecretEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) SecretEq(secret string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("secret = ?", secret))
}

// SecretIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) SecretIn(secret string, secretRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{secret}
	for _, arg := range secretRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("secret IN (?)", iArgs))
}

// SecretNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) SecretNe(secret string) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("secret != ?", secret))
}

// SecretNotIn is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) SecretNotIn(secret string, secretRest ...string) PaymentSystemQuerySet {
	iArgs := []interface{}{secret}
	for _, arg := range secretRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("secret NOT IN (?)", iArgs))
}

// SetAccountID is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetAccountID(accountID string) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.AccountID)] = accountID
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetCreatedAt(createdAt time.Time) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCurrencies is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetCurrencies(currencies string) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.Currencies)] = currencies
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetDeletedAt(deletedAt *time.Time) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetDirection is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetDirection(direction PaymentDirection) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.Direction)] = direction
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetID(ID uint) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.ID)] = ID
	return u
}

// SetKey is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetKey(key string) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.Key)] = key
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetName(name string) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.Name)] = name
	return u
}

// SetPSType is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetPSType(pSType PaymentSystemType) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.PSType)] = pSType
	return u
}

// SetPaymentDirection is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetPaymentDirection(paymentDirection PaymentDirection) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.PaymentDirection)] = paymentDirection
	return u
}

// SetSecret is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetSecret(secret string) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.Secret)] = secret
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) SetUpdatedAt(updatedAt time.Time) PaymentSystemUpdater {
	u.fields[string(PaymentSystemDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u PaymentSystemUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) UpdatedAtEq(updatedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) UpdatedAtGt(updatedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) UpdatedAtGte(updatedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) UpdatedAtLt(updatedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) UpdatedAtLte(updatedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs PaymentSystemQuerySet) UpdatedAtNe(updatedAt time.Time) PaymentSystemQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set PaymentSystemQuerySet

// ===== BEGIN of PaymentSystem modifiers

type paymentSystemDBSchemaField string

func (f paymentSystemDBSchemaField) String() string {
	return string(f)
}

// PaymentSystemDBSchema stores db field names of PaymentSystem
var PaymentSystemDBSchema = struct {
	ID               paymentSystemDBSchemaField
	CreatedAt        paymentSystemDBSchemaField
	UpdatedAt        paymentSystemDBSchemaField
	DeletedAt        paymentSystemDBSchemaField
	Key              paymentSystemDBSchemaField
	Secret           paymentSystemDBSchemaField
	AccountID        paymentSystemDBSchemaField
	PSType           paymentSystemDBSchemaField
	PaymentDirection paymentSystemDBSchemaField
	Currencies       paymentSystemDBSchemaField
	Direction        paymentSystemDBSchemaField
	Name             paymentSystemDBSchemaField
}{

	ID:               paymentSystemDBSchemaField("id"),
	CreatedAt:        paymentSystemDBSchemaField("created_at"),
	UpdatedAt:        paymentSystemDBSchemaField("updated_at"),
	DeletedAt:        paymentSystemDBSchemaField("deleted_at"),
	Key:              paymentSystemDBSchemaField("key"),
	Secret:           paymentSystemDBSchemaField("secret"),
	AccountID:        paymentSystemDBSchemaField("account_id"),
	PSType:           paymentSystemDBSchemaField("ps_type"),
	PaymentDirection: paymentSystemDBSchemaField("payment_direction"),
	Currencies:       paymentSystemDBSchemaField("currencies"),
	Direction:        paymentSystemDBSchemaField("direction"),
	Name:             paymentSystemDBSchemaField("name"),
}

// Update updates PaymentSystem fields by primary key
func (o *PaymentSystem) Update(db *gorm.DB, fields ...paymentSystemDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":                o.ID,
		"created_at":        o.CreatedAt,
		"updated_at":        o.UpdatedAt,
		"deleted_at":        o.DeletedAt,
		"key":               o.Key,
		"secret":            o.Secret,
		"account_id":        o.AccountID,
		"ps_type":           o.PSType,
		"payment_direction": o.PaymentDirection,
		"currencies":        o.Currencies,
		"direction":         o.Direction,
		"name":              o.Name,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update PaymentSystem %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// PaymentSystemUpdater is an PaymentSystem updates manager
type PaymentSystemUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewPaymentSystemUpdater creates new PaymentSystem updater
func NewPaymentSystemUpdater(db *gorm.DB) PaymentSystemUpdater {
	return PaymentSystemUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&PaymentSystem{}),
	}
}

// ===== END of PaymentSystem modifiers

// ===== END of all query sets
