package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set PageQuerySet

// PageQuerySet is an queryset type for Page
type PageQuerySet struct {
	db *gorm.DB
}

// NewPageQuerySet constructs new PageQuerySet
func NewPageQuerySet(db *gorm.DB) PageQuerySet {
	return PageQuerySet{
		db: db.Model(&Page{}),
	}
}

func (qs PageQuerySet) w(db *gorm.DB) PageQuerySet {
	return NewPageQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) All(ret *[]Page) error {
	return qs.db.Find(ret).Error
}

// BodyEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) BodyEq(body string) PageQuerySet {
	return qs.w(qs.db.Where("body = ?", body))
}

// BodyIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) BodyIn(body string, bodyRest ...string) PageQuerySet {
	iArgs := []interface{}{body}
	for _, arg := range bodyRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("body IN (?)", iArgs))
}

// BodyNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) BodyNe(body string) PageQuerySet {
	return qs.w(qs.db.Where("body != ?", body))
}

// BodyNotIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) BodyNotIn(body string, bodyRest ...string) PageQuerySet {
	iArgs := []interface{}{body}
	for _, arg := range bodyRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("body NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Page) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) CreatedAtEq(createdAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) CreatedAtGt(createdAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) CreatedAtGte(createdAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) CreatedAtLt(createdAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) CreatedAtLte(createdAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) CreatedAtNe(createdAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) Delete() error {
	return qs.db.Delete(Page{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Page) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtEq(deletedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtGt(deletedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtGte(deletedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtIsNotNull() PageQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtIsNull() PageQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtLt(deletedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtLte(deletedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) DeletedAtNe(deletedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) GetUpdater() PageUpdater {
	return NewPageUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDEq(ID uint) PageQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDGt(ID uint) PageQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDGte(ID uint) PageQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDIn(ID uint, IDRest ...uint) PageQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDLt(ID uint) PageQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDLte(ID uint) PageQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDNe(ID uint) PageQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) IDNotIn(ID uint, IDRest ...uint) PageQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) Limit(limit int) PageQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs PageQuerySet) One(ret *Page) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderAscByCreatedAt() PageQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderAscByDeletedAt() PageQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderAscByID() PageQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderAscByUpdatedAt() PageQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderDescByCreatedAt() PageQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderDescByDeletedAt() PageQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderDescByID() PageQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) OrderDescByUpdatedAt() PageQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PublishedEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) PublishedEq(published bool) PageQuerySet {
	return qs.w(qs.db.Where("published = ?", published))
}

// PublishedIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) PublishedIn(published bool, publishedRest ...bool) PageQuerySet {
	iArgs := []interface{}{published}
	for _, arg := range publishedRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("published IN (?)", iArgs))
}

// PublishedNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) PublishedNe(published bool) PageQuerySet {
	return qs.w(qs.db.Where("published != ?", published))
}

// PublishedNotIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) PublishedNotIn(published bool, publishedRest ...bool) PageQuerySet {
	iArgs := []interface{}{published}
	for _, arg := range publishedRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("published NOT IN (?)", iArgs))
}

// SetBody is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetBody(body string) PageUpdater {
	u.fields[string(PageDBSchema.Body)] = body
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetCreatedAt(createdAt time.Time) PageUpdater {
	u.fields[string(PageDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetDeletedAt(deletedAt *time.Time) PageUpdater {
	u.fields[string(PageDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetID(ID uint) PageUpdater {
	u.fields[string(PageDBSchema.ID)] = ID
	return u
}

// SetPublished is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetPublished(published bool) PageUpdater {
	u.fields[string(PageDBSchema.Published)] = published
	return u
}

// SetSlug is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetSlug(slug string) PageUpdater {
	u.fields[string(PageDBSchema.Slug)] = slug
	return u
}

// SetTitle is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetTitle(title string) PageUpdater {
	u.fields[string(PageDBSchema.Title)] = title
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u PageUpdater) SetUpdatedAt(updatedAt time.Time) PageUpdater {
	u.fields[string(PageDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SlugEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) SlugEq(slug string) PageQuerySet {
	return qs.w(qs.db.Where("slug = ?", slug))
}

// SlugIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) SlugIn(slug string, slugRest ...string) PageQuerySet {
	iArgs := []interface{}{slug}
	for _, arg := range slugRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("slug IN (?)", iArgs))
}

// SlugNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) SlugNe(slug string) PageQuerySet {
	return qs.w(qs.db.Where("slug != ?", slug))
}

// SlugNotIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) SlugNotIn(slug string, slugRest ...string) PageQuerySet {
	iArgs := []interface{}{slug}
	for _, arg := range slugRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("slug NOT IN (?)", iArgs))
}

// TitleEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) TitleEq(title string) PageQuerySet {
	return qs.w(qs.db.Where("title = ?", title))
}

// TitleIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) TitleIn(title string, titleRest ...string) PageQuerySet {
	iArgs := []interface{}{title}
	for _, arg := range titleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("title IN (?)", iArgs))
}

// TitleNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) TitleNe(title string) PageQuerySet {
	return qs.w(qs.db.Where("title != ?", title))
}

// TitleNotIn is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) TitleNotIn(title string, titleRest ...string) PageQuerySet {
	iArgs := []interface{}{title}
	for _, arg := range titleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("title NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u PageUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u PageUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) UpdatedAtEq(updatedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) UpdatedAtGt(updatedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) UpdatedAtGte(updatedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) UpdatedAtLt(updatedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) UpdatedAtLte(updatedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs PageQuerySet) UpdatedAtNe(updatedAt time.Time) PageQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set PageQuerySet

// ===== BEGIN of Page modifiers

type pageDBSchemaField string

func (f pageDBSchemaField) String() string {
	return string(f)
}

// PageDBSchema stores db field names of Page
var PageDBSchema = struct {
	ID        pageDBSchemaField
	CreatedAt pageDBSchemaField
	UpdatedAt pageDBSchemaField
	DeletedAt pageDBSchemaField
	Slug      pageDBSchemaField
	Title     pageDBSchemaField
	Body      pageDBSchemaField
	Published pageDBSchemaField
}{

	ID:        pageDBSchemaField("id"),
	CreatedAt: pageDBSchemaField("created_at"),
	UpdatedAt: pageDBSchemaField("updated_at"),
	DeletedAt: pageDBSchemaField("deleted_at"),
	Slug:      pageDBSchemaField("slug"),
	Title:     pageDBSchemaField("title"),
	Body:      pageDBSchemaField("body"),
	Published: pageDBSchemaField("published"),
}

// Update updates Page fields by primary key
func (o *Page) Update(db *gorm.DB, fields ...pageDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"slug":       o.Slug,
		"title":      o.Title,
		"body":       o.Body,
		"published":  o.Published,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Page %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// PageUpdater is an Page updates manager
type PageUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewPageUpdater creates new Page updater
func NewPageUpdater(db *gorm.DB) PageUpdater {
	return PageUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Page{}),
	}
}

// ===== END of Page modifiers

// ===== END of all query sets
