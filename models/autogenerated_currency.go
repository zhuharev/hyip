package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set CurrencyQuerySet

// CurrencyQuerySet is an queryset type for Currency
type CurrencyQuerySet struct {
	db *gorm.DB
}

// NewCurrencyQuerySet constructs new CurrencyQuerySet
func NewCurrencyQuerySet(db *gorm.DB) CurrencyQuerySet {
	return CurrencyQuerySet{
		db: db.Model(&Currency{}),
	}
}

func (qs CurrencyQuerySet) w(db *gorm.DB) CurrencyQuerySet {
	return NewCurrencyQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) All(ret *[]Currency) error {
	return qs.db.Find(ret).Error
}

// CodeEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CodeEq(code string) CurrencyQuerySet {
	return qs.w(qs.db.Where("code = ?", code))
}

// CodeIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CodeIn(code string, codeRest ...string) CurrencyQuerySet {
	iArgs := []interface{}{code}
	for _, arg := range codeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("code IN (?)", iArgs))
}

// CodeNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CodeNe(code string) CurrencyQuerySet {
	return qs.w(qs.db.Where("code != ?", code))
}

// CodeNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CodeNotIn(code string, codeRest ...string) CurrencyQuerySet {
	iArgs := []interface{}{code}
	for _, arg := range codeRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("code NOT IN (?)", iArgs))
}

// Count is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Currency) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CreatedAtEq(createdAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CreatedAtGt(createdAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CreatedAtGte(createdAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CreatedAtLt(createdAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CreatedAtLte(createdAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) CreatedAtNe(createdAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) Delete() error {
	return qs.db.Delete(Currency{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Currency) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtEq(deletedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtGt(deletedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtGte(deletedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtIsNotNull() CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtIsNull() CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtLt(deletedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtLte(deletedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DeletedAtNe(deletedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// DigitsEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsEq(digits uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("digits = ?", digits))
}

// DigitsGt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsGt(digits uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("digits > ?", digits))
}

// DigitsGte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsGte(digits uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("digits >= ?", digits))
}

// DigitsIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsIn(digits uint, digitsRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{digits}
	for _, arg := range digitsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("digits IN (?)", iArgs))
}

// DigitsLt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsLt(digits uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("digits < ?", digits))
}

// DigitsLte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsLte(digits uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("digits <= ?", digits))
}

// DigitsNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsNe(digits uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("digits != ?", digits))
}

// DigitsNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) DigitsNotIn(digits uint, digitsRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{digits}
	for _, arg := range digitsRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("digits NOT IN (?)", iArgs))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) GetUpdater() CurrencyUpdater {
	return NewCurrencyUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDEq(ID uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDGt(ID uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDGte(ID uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDIn(ID uint, IDRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDLt(ID uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDLte(ID uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDNe(ID uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) IDNotIn(ID uint, IDRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) Limit(limit int) CurrencyQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// MessageEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MessageEq(message string) CurrencyQuerySet {
	return qs.w(qs.db.Where("message = ?", message))
}

// MessageIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MessageIn(message string, messageRest ...string) CurrencyQuerySet {
	iArgs := []interface{}{message}
	for _, arg := range messageRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("message IN (?)", iArgs))
}

// MessageNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MessageNe(message string) CurrencyQuerySet {
	return qs.w(qs.db.Where("message != ?", message))
}

// MessageNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MessageNotIn(message string, messageRest ...string) CurrencyQuerySet {
	iArgs := []interface{}{message}
	for _, arg := range messageRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("message NOT IN (?)", iArgs))
}

// MinimalAmountEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountEq(minimalAmount uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("minimal_amount = ?", minimalAmount))
}

// MinimalAmountGt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountGt(minimalAmount uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("minimal_amount > ?", minimalAmount))
}

// MinimalAmountGte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountGte(minimalAmount uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("minimal_amount >= ?", minimalAmount))
}

// MinimalAmountIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountIn(minimalAmount uint, minimalAmountRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{minimalAmount}
	for _, arg := range minimalAmountRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("minimal_amount IN (?)", iArgs))
}

// MinimalAmountLt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountLt(minimalAmount uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("minimal_amount < ?", minimalAmount))
}

// MinimalAmountLte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountLte(minimalAmount uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("minimal_amount <= ?", minimalAmount))
}

// MinimalAmountNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountNe(minimalAmount uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("minimal_amount != ?", minimalAmount))
}

// MinimalAmountNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) MinimalAmountNotIn(minimalAmount uint, minimalAmountRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{minimalAmount}
	for _, arg := range minimalAmountRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("minimal_amount NOT IN (?)", iArgs))
}

// NumberEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberEq(number uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("number = ?", number))
}

// NumberGt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberGt(number uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("number > ?", number))
}

// NumberGte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberGte(number uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("number >= ?", number))
}

// NumberIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberIn(number uint, numberRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{number}
	for _, arg := range numberRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("number IN (?)", iArgs))
}

// NumberLt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberLt(number uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("number < ?", number))
}

// NumberLte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberLte(number uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("number <= ?", number))
}

// NumberNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberNe(number uint) CurrencyQuerySet {
	return qs.w(qs.db.Where("number != ?", number))
}

// NumberNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) NumberNotIn(number uint, numberRest ...uint) CurrencyQuerySet {
	iArgs := []interface{}{number}
	for _, arg := range numberRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("number NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs CurrencyQuerySet) One(ret *Currency) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderAscByCreatedAt() CurrencyQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderAscByDeletedAt() CurrencyQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByDigits is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderAscByDigits() CurrencyQuerySet {
	return qs.w(qs.db.Order("digits ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderAscByID() CurrencyQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByMinimalAmount is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderAscByMinimalAmount() CurrencyQuerySet {
	return qs.w(qs.db.Order("minimal_amount ASC"))
}

// OrderAscByNumber is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderAscByNumber() CurrencyQuerySet {
	return qs.w(qs.db.Order("number ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderAscByUpdatedAt() CurrencyQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderDescByCreatedAt() CurrencyQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderDescByDeletedAt() CurrencyQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByDigits is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderDescByDigits() CurrencyQuerySet {
	return qs.w(qs.db.Order("digits DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderDescByID() CurrencyQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByMinimalAmount is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderDescByMinimalAmount() CurrencyQuerySet {
	return qs.w(qs.db.Order("minimal_amount DESC"))
}

// OrderDescByNumber is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderDescByNumber() CurrencyQuerySet {
	return qs.w(qs.db.Order("number DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) OrderDescByUpdatedAt() CurrencyQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SetCode is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetCode(code string) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.Code)] = code
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetCreatedAt(createdAt time.Time) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetDeletedAt(deletedAt *time.Time) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetDigits is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetDigits(digits uint) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.Digits)] = digits
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetID(ID uint) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.ID)] = ID
	return u
}

// SetMessage is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetMessage(message string) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.Message)] = message
	return u
}

// SetMinimalAmount is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetMinimalAmount(minimalAmount uint) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.MinimalAmount)] = minimalAmount
	return u
}

// SetNumber is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetNumber(number uint) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.Number)] = number
	return u
}

// SetSymbol is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetSymbol(symbol string) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.Symbol)] = symbol
	return u
}

// SetSymbolRight is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetSymbolRight(symbolRight bool) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.SymbolRight)] = symbolRight
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) SetUpdatedAt(updatedAt time.Time) CurrencyUpdater {
	u.fields[string(CurrencyDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SymbolEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolEq(symbol string) CurrencyQuerySet {
	return qs.w(qs.db.Where("symbol = ?", symbol))
}

// SymbolIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolIn(symbol string, symbolRest ...string) CurrencyQuerySet {
	iArgs := []interface{}{symbol}
	for _, arg := range symbolRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("symbol IN (?)", iArgs))
}

// SymbolNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolNe(symbol string) CurrencyQuerySet {
	return qs.w(qs.db.Where("symbol != ?", symbol))
}

// SymbolNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolNotIn(symbol string, symbolRest ...string) CurrencyQuerySet {
	iArgs := []interface{}{symbol}
	for _, arg := range symbolRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("symbol NOT IN (?)", iArgs))
}

// SymbolRightEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolRightEq(symbolRight bool) CurrencyQuerySet {
	return qs.w(qs.db.Where("symbol_right = ?", symbolRight))
}

// SymbolRightIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolRightIn(symbolRight bool, symbolRightRest ...bool) CurrencyQuerySet {
	iArgs := []interface{}{symbolRight}
	for _, arg := range symbolRightRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("symbol_right IN (?)", iArgs))
}

// SymbolRightNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolRightNe(symbolRight bool) CurrencyQuerySet {
	return qs.w(qs.db.Where("symbol_right != ?", symbolRight))
}

// SymbolRightNotIn is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) SymbolRightNotIn(symbolRight bool, symbolRightRest ...bool) CurrencyQuerySet {
	iArgs := []interface{}{symbolRight}
	for _, arg := range symbolRightRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("symbol_right NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u CurrencyUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) UpdatedAtEq(updatedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) UpdatedAtGt(updatedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) UpdatedAtGte(updatedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) UpdatedAtLt(updatedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) UpdatedAtLte(updatedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs CurrencyQuerySet) UpdatedAtNe(updatedAt time.Time) CurrencyQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set CurrencyQuerySet

// ===== BEGIN of Currency modifiers

type currencyDBSchemaField string

func (f currencyDBSchemaField) String() string {
	return string(f)
}

// CurrencyDBSchema stores db field names of Currency
var CurrencyDBSchema = struct {
	ID            currencyDBSchemaField
	CreatedAt     currencyDBSchemaField
	UpdatedAt     currencyDBSchemaField
	DeletedAt     currencyDBSchemaField
	Code          currencyDBSchemaField
	Number        currencyDBSchemaField
	Digits        currencyDBSchemaField
	MinimalAmount currencyDBSchemaField
	Message       currencyDBSchemaField
	Symbol        currencyDBSchemaField
	SymbolRight   currencyDBSchemaField
}{

	ID:            currencyDBSchemaField("id"),
	CreatedAt:     currencyDBSchemaField("created_at"),
	UpdatedAt:     currencyDBSchemaField("updated_at"),
	DeletedAt:     currencyDBSchemaField("deleted_at"),
	Code:          currencyDBSchemaField("code"),
	Number:        currencyDBSchemaField("number"),
	Digits:        currencyDBSchemaField("digits"),
	MinimalAmount: currencyDBSchemaField("minimal_amount"),
	Message:       currencyDBSchemaField("message"),
	Symbol:        currencyDBSchemaField("symbol"),
	SymbolRight:   currencyDBSchemaField("symbol_right"),
}

// Update updates Currency fields by primary key
func (o *Currency) Update(db *gorm.DB, fields ...currencyDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":             o.ID,
		"created_at":     o.CreatedAt,
		"updated_at":     o.UpdatedAt,
		"deleted_at":     o.DeletedAt,
		"code":           o.Code,
		"number":         o.Number,
		"digits":         o.Digits,
		"minimal_amount": o.MinimalAmount,
		"message":        o.Message,
		"symbol":         o.Symbol,
		"symbol_right":   o.SymbolRight,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Currency %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// CurrencyUpdater is an Currency updates manager
type CurrencyUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewCurrencyUpdater creates new Currency updater
func NewCurrencyUpdater(db *gorm.DB) CurrencyUpdater {
	return CurrencyUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Currency{}),
	}
}

// ===== END of Currency modifiers

// ===== END of all query sets
